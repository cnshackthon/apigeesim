/*
 * Network as Code
 *
 * Manipulate network conditions via simplified REST calls
 *
 * API version: 2
 * Contact: todd.levi@nokia.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package datarepository

import (
	"time"
)

type LocationResponse struct {

	EventTime time.Time `json:"eventTime,omitempty"`

	Id string `json:"id,omitempty"`

	LocationInfo LocationDetails `json:"locationInfo,omitempty"`
}

// AssertLocationResponseRequired checks if the required fields are not zero-ed
func AssertLocationResponseRequired(obj LocationResponse) error {
	if err := AssertLocationDetailsRequired(obj.LocationInfo); err != nil {
		return err
	}
	return nil
}

// AssertRecurseLocationResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LocationResponse (e.g. [][]LocationResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseLocationResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLocationResponse, ok := obj.(LocationResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertLocationResponseRequired(aLocationResponse)
	})
}
