/*
 * Network as Code
 *
 * Manipulate network conditions via simplified REST calls
 *
 * API version: 2
 * Contact: todd.levi@nokia.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package datarepository

import (
	"context"
	"net/http"
	"errors"
)

// BandwidthApiService is a service that implements the logic for the BandwidthApiServicer
// This service should implement the business logic for every endpoint for the BandwidthApi API.
// Include any external packages or services that will be required by this service.
type BandwidthApiService struct {
}

// NewBandwidthApiService creates a default api service
func NewBandwidthApiService() BandwidthApiServicer {
	return &BandwidthApiService{}
}

// GetCustomBandwidth - Get upload/download limit
func (s *BandwidthApiService) GetCustomBandwidth(ctx context.Context, subscriberId SubscriberId, xTestmode string) (ImplResponse, error) {
	// TODO - update GetCustomBandwidth with the required logic for this service method.
	// Add api_bandwidth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CustomLimits{}) or use other options such as http.Ok ...
	//return Response(200, CustomLimits{}), nil

	//TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	//return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCustomBandwidth method not implemented")
}

// GetSubscriberBandwidth - Get the current subscriber bandwidth
func (s *BandwidthApiService) GetSubscriberBandwidth(ctx context.Context, subscriberId SubscriberId, xTestmode string) (ImplResponse, error) {
	// TODO - update GetSubscriberBandwidth with the required logic for this service method.
	// Add api_bandwidth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, BandwidthResponse{}) or use other options such as http.Ok ...
	//return Response(200, BandwidthResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	//return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSubscriberBandwidth method not implemented")
}

// UpdateCustomBandwidth - Set upload limit
func (s *BandwidthApiService) UpdateCustomBandwidth(ctx context.Context, customLimits CustomLimits, xTestmode string) (ImplResponse, error) {
	// TODO - update UpdateCustomBandwidth with the required logic for this service method.
	// Add api_bandwidth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CustomLimits{}) or use other options such as http.Ok ...
	//return Response(200, CustomLimits{}), nil

	//TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	//return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCustomBandwidth method not implemented")
}

// UpdateSubscriberBandwidth - Update the bandwidth of the subscriber
func (s *BandwidthApiService) UpdateSubscriberBandwidth(ctx context.Context, bandwidthUpdate BandwidthUpdate, xTestmode string) (ImplResponse, error) {
	// TODO - update UpdateSubscriberBandwidth with the required logic for this service method.
	// Add api_bandwidth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, BandwidthResponse{}) or use other options such as http.Ok ...
	//return Response(200, BandwidthResponse{}), nil

	//TODO: Uncomment the next line to return response Response(400, ApiError{}) or use other options such as http.Ok ...
	//return Response(400, ApiError{}), nil

	//TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	//return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateSubscriberBandwidth method not implemented")
}
